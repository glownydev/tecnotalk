"use strict";exports.id=66,exports.ids=[66],exports.modules={5066:(e,t,r)=>{let a;r.d(t,{_:()=>jwtVerify});let i=new TextEncoder,s=new TextDecoder;function decode(e){if(Uint8Array.fromBase64)return Uint8Array.fromBase64("string"==typeof e?e:s.decode(e),{alphabet:"base64url"});let t=e;t instanceof Uint8Array&&(t=s.decode(t)),t=t.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return function(e){if(Uint8Array.fromBase64)return Uint8Array.fromBase64(e);let t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r}(t)}catch{throw TypeError("The input to be decoded is not correctly encoded.")}}let JOSEError=class JOSEError extends Error{static{this.code="ERR_JOSE_GENERIC"}constructor(e,t){super(e,t),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,Error.captureStackTrace?.(this,this.constructor)}};let JWTClaimValidationFailed=class JWTClaimValidationFailed extends JOSEError{static{this.code="ERR_JWT_CLAIM_VALIDATION_FAILED"}constructor(e,t,r="unspecified",a="unspecified"){super(e,{cause:{claim:r,reason:a,payload:t}}),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=r,this.reason=a,this.payload=t}};let JWTExpired=class JWTExpired extends JOSEError{static{this.code="ERR_JWT_EXPIRED"}constructor(e,t,r="unspecified",a="unspecified"){super(e,{cause:{claim:r,reason:a,payload:t}}),this.code="ERR_JWT_EXPIRED",this.claim=r,this.reason=a,this.payload=t}};let JOSEAlgNotAllowed=class JOSEAlgNotAllowed extends JOSEError{static{this.code="ERR_JOSE_ALG_NOT_ALLOWED"}constructor(...e){super(...e),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}};let JOSENotSupported=class JOSENotSupported extends JOSEError{static{this.code="ERR_JOSE_NOT_SUPPORTED"}constructor(...e){super(...e),this.code="ERR_JOSE_NOT_SUPPORTED"}};let JWEDecryptionFailed=class JWEDecryptionFailed extends JOSEError{static{this.code="ERR_JWE_DECRYPTION_FAILED"}constructor(e="decryption operation failed",t){super(e,t),this.code="ERR_JWE_DECRYPTION_FAILED"}};let JWEInvalid=class JWEInvalid extends JOSEError{static{this.code="ERR_JWE_INVALID"}constructor(...e){super(...e),this.code="ERR_JWE_INVALID"}};let JWSInvalid=class JWSInvalid extends JOSEError{static{this.code="ERR_JWS_INVALID"}constructor(...e){super(...e),this.code="ERR_JWS_INVALID"}};let JWTInvalid=class JWTInvalid extends JOSEError{static{this.code="ERR_JWT_INVALID"}constructor(...e){super(...e),this.code="ERR_JWT_INVALID"}};let JWKInvalid=class JWKInvalid extends JOSEError{static{this.code="ERR_JWK_INVALID"}constructor(...e){super(...e),this.code="ERR_JWK_INVALID"}};let JWKSInvalid=class JWKSInvalid extends JOSEError{static{this.code="ERR_JWKS_INVALID"}constructor(...e){super(...e),this.code="ERR_JWKS_INVALID"}};let JWKSNoMatchingKey=class JWKSNoMatchingKey extends JOSEError{static{this.code="ERR_JWKS_NO_MATCHING_KEY"}constructor(e="no applicable key found in the JSON Web Key Set",t){super(e,t),this.code="ERR_JWKS_NO_MATCHING_KEY"}};let JWKSMultipleMatchingKeys=class JWKSMultipleMatchingKeys extends JOSEError{static{Symbol.asyncIterator}static{this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS"}constructor(e="multiple matching keys found in the JSON Web Key Set",t){super(e,t),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS"}};let JWKSTimeout=class JWKSTimeout extends JOSEError{static{this.code="ERR_JWKS_TIMEOUT"}constructor(e="request timed out",t){super(e,t),this.code="ERR_JWKS_TIMEOUT"}};let JWSSignatureVerificationFailed=class JWSSignatureVerificationFailed extends JOSEError{static{this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}constructor(e="signature verification failed",t){super(e,t),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}};let subtle_dsa=(e,t)=>{let r=`SHA-${e.slice(-3)}`;switch(e){case"HS256":case"HS384":case"HS512":return{hash:r,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:r,name:"RSA-PSS",saltLength:parseInt(e.slice(-3),10)>>3};case"RS256":case"RS384":case"RS512":return{hash:r,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:r,name:"ECDSA",namedCurve:t.namedCurve};case"Ed25519":case"EdDSA":return{name:"Ed25519"};case"ML-DSA-44":case"ML-DSA-65":case"ML-DSA-87":return{name:e};default:throw new JOSENotSupported(`alg ${e} is not supported either by JOSE or your javascript runtime`)}},check_key_length=(e,t)=>{if(e.startsWith("RS")||e.startsWith("PS")){let{modulusLength:r}=t.algorithm;if("number"!=typeof r||r<2048)throw TypeError(`${e} requires key modulusLength to be 2048 bits or larger`)}};function unusable(e,t="algorithm.name"){return TypeError(`CryptoKey does not support this operation, its ${t} must be ${e}`)}function isAlgorithm(e,t){return e.name===t}function getHashLength(e){return parseInt(e.name.slice(4),10)}function message(e,t,...r){if((r=r.filter(Boolean)).length>2){let t=r.pop();e+=`one of type ${r.join(", ")}, or ${t}.`}else 2===r.length?e+=`one of type ${r[0]} or ${r[1]}.`:e+=`of type ${r[0]}.`;return null==t?e+=` Received ${t}`:"function"==typeof t&&t.name?e+=` Received function ${t.name}`:"object"==typeof t&&null!=t&&t.constructor?.name&&(e+=` Received an instance of ${t.constructor.name}`),e}let invalid_key_input=(e,...t)=>message("Key must be ",e,...t);function withAlg(e,t,...r){return message(`Key for the ${e} algorithm must be `,t,...r)}let get_sign_verify_key=async(e,t,r)=>{if(t instanceof Uint8Array){if(!e.startsWith("HS"))throw TypeError(invalid_key_input(t,"CryptoKey","KeyObject","JSON Web Key"));return crypto.subtle.importKey("raw",t,{hash:`SHA-${e.slice(-3)}`,name:"HMAC"},!1,[r])}return function(e,t,r){switch(t){case"HS256":case"HS384":case"HS512":{if(!isAlgorithm(e.algorithm,"HMAC"))throw unusable("HMAC");let r=parseInt(t.slice(2),10),a=getHashLength(e.algorithm.hash);if(a!==r)throw unusable(`SHA-${r}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!isAlgorithm(e.algorithm,"RSASSA-PKCS1-v1_5"))throw unusable("RSASSA-PKCS1-v1_5");let r=parseInt(t.slice(2),10),a=getHashLength(e.algorithm.hash);if(a!==r)throw unusable(`SHA-${r}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!isAlgorithm(e.algorithm,"RSA-PSS"))throw unusable("RSA-PSS");let r=parseInt(t.slice(2),10),a=getHashLength(e.algorithm.hash);if(a!==r)throw unusable(`SHA-${r}`,"algorithm.hash");break}case"Ed25519":case"EdDSA":if(!isAlgorithm(e.algorithm,"Ed25519"))throw unusable("Ed25519");break;case"ML-DSA-44":case"ML-DSA-65":case"ML-DSA-87":if(!isAlgorithm(e.algorithm,t))throw unusable(t);break;case"ES256":case"ES384":case"ES512":{if(!isAlgorithm(e.algorithm,"ECDSA"))throw unusable("ECDSA");let r=function(e){switch(e){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw Error("unreachable")}}(t),a=e.algorithm.namedCurve;if(a!==r)throw unusable(r,"algorithm.namedCurve");break}default:throw TypeError("CryptoKey does not support this operation")}(function(e,t){if(t&&!e.usages.includes(t))throw TypeError(`CryptoKey does not support this operation, its usages must include ${t}.`)})(e,r)}(t,e,r),t},verify=async(e,t,r,a)=>{let i=await get_sign_verify_key(e,t,"verify");check_key_length(e,i);let s=subtle_dsa(e,i.algorithm);try{return await crypto.subtle.verify(s,i,r,a)}catch{return!1}},is_disjoint=(...e)=>{let t;let r=e.filter(Boolean);if(0===r.length||1===r.length)return!0;for(let e of r){let r=Object.keys(e);if(!t||0===t.size){t=new Set(r);continue}for(let e of r){if(t.has(e))return!1;t.add(e)}}return!0},is_object=e=>{if(!function(e){return"object"==typeof e&&null!==e}(e)||"[object Object]"!==Object.prototype.toString.call(e))return!1;if(null===Object.getPrototypeOf(e))return!0;let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t};function isCryptoKey(e){return e?.[Symbol.toStringTag]==="CryptoKey"}function isKeyObject(e){return e?.[Symbol.toStringTag]==="KeyObject"}let is_key_like=e=>isCryptoKey(e)||isKeyObject(e);function isJWK(e){return is_object(e)&&"string"==typeof e.kty}let tag=e=>e?.[Symbol.toStringTag],jwkMatchesOp=(e,t,r)=>{if(void 0!==t.use){let e;switch(r){case"sign":case"verify":e="sig";break;case"encrypt":case"decrypt":e="enc"}if(t.use!==e)throw TypeError(`Invalid key for this operation, its "use" must be "${e}" when present`)}if(void 0!==t.alg&&t.alg!==e)throw TypeError(`Invalid key for this operation, its "alg" must be "${e}" when present`);if(Array.isArray(t.key_ops)){let a;switch(!0){case"sign"===r||"verify"===r:case"dir"===e:case e.includes("CBC-HS"):a=r;break;case e.startsWith("PBES2"):a="deriveBits";break;case/^A\d{3}(?:GCM)?(?:KW)?$/.test(e):a=!e.includes("GCM")&&e.endsWith("KW")?"encrypt"===r?"wrapKey":"unwrapKey":r;break;case"encrypt"===r&&e.startsWith("RSA"):a="wrapKey";break;case"decrypt"===r:a=e.startsWith("RSA")?"unwrapKey":"deriveBits"}if(a&&t.key_ops?.includes?.(a)===!1)throw TypeError(`Invalid key for this operation, its "key_ops" must include "${a}" when present`)}return!0},symmetricTypeCheck=(e,t,r)=>{if(!(t instanceof Uint8Array)){if(isJWK(t)){if(function(e){return"oct"===e.kty&&"string"==typeof e.k}(t)&&jwkMatchesOp(e,t,r))return;throw TypeError('JSON Web Key for symmetric algorithms must have JWK "kty" (Key Type) equal to "oct" and the JWK "k" (Key Value) present')}if(!is_key_like(t))throw TypeError(withAlg(e,t,"CryptoKey","KeyObject","JSON Web Key","Uint8Array"));if("secret"!==t.type)throw TypeError(`${tag(t)} instances for symmetric algorithms must be of type "secret"`)}},asymmetricTypeCheck=(e,t,r)=>{if(isJWK(t))switch(r){case"decrypt":case"sign":if(function(e){return"oct"!==e.kty&&("AKP"===e.kty&&"string"==typeof e.priv||"string"==typeof e.d)}(t)&&jwkMatchesOp(e,t,r))return;throw TypeError("JSON Web Key for this operation be a private JWK");case"encrypt":case"verify":if(function(e){return"oct"!==e.kty&&void 0===e.d&&void 0===e.priv}(t)&&jwkMatchesOp(e,t,r))return;throw TypeError("JSON Web Key for this operation be a public JWK")}if(!is_key_like(t))throw TypeError(withAlg(e,t,"CryptoKey","KeyObject","JSON Web Key"));if("secret"===t.type)throw TypeError(`${tag(t)} instances for asymmetric algorithms must not be of type "secret"`);if("public"===t.type)switch(r){case"sign":throw TypeError(`${tag(t)} instances for asymmetric algorithm signing must be of type "private"`);case"decrypt":throw TypeError(`${tag(t)} instances for asymmetric algorithm decryption must be of type "private"`)}if("private"===t.type)switch(r){case"verify":throw TypeError(`${tag(t)} instances for asymmetric algorithm verifying must be of type "public"`);case"encrypt":throw TypeError(`${tag(t)} instances for asymmetric algorithm encryption must be of type "public"`)}},check_key_type=(e,t,r)=>{let a=e.startsWith("HS")||"dir"===e||e.startsWith("PBES2")||/^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(e)||/^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(e);a?symmetricTypeCheck(e,t,r):asymmetricTypeCheck(e,t,r)},validate_crit=(e,t,r,a,i)=>{let s;if(void 0!==i.crit&&a?.crit===void 0)throw new e('"crit" (Critical) Header Parameter MUST be integrity protected');if(!a||void 0===a.crit)return new Set;if(!Array.isArray(a.crit)||0===a.crit.length||a.crit.some(e=>"string"!=typeof e||0===e.length))throw new e('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');for(let o of(s=void 0!==r?new Map([...Object.entries(r),...t.entries()]):t,a.crit)){if(!s.has(o))throw new JOSENotSupported(`Extension Header Parameter "${o}" is not recognized`);if(void 0===i[o])throw new e(`Extension Header Parameter "${o}" is missing`);if(s.get(o)&&void 0===a[o])throw new e(`Extension Header Parameter "${o}" MUST be integrity protected`)}return new Set(a.crit)},validate_algorithms=(e,t)=>{if(void 0!==t&&(!Array.isArray(t)||t.some(e=>"string"!=typeof e)))throw TypeError(`"${e}" option must be an array of strings`);if(t)return new Set(t)},jwk_to_key=async e=>{if(!e.alg)throw TypeError('"alg" argument is required when "jwk.alg" is not present');let{algorithm:t,keyUsages:r}=function(e){let t,r;switch(e.kty){case"AKP":switch(e.alg){case"ML-DSA-44":case"ML-DSA-65":case"ML-DSA-87":t={name:e.alg},r=e.priv?["sign"]:["verify"];break;default:throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"RSA":switch(e.alg){case"PS256":case"PS384":case"PS512":t={name:"RSA-PSS",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":t={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${e.alg.slice(-3)}`},r=e.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":t={name:"RSA-OAEP",hash:`SHA-${parseInt(e.alg.slice(-3),10)||1}`},r=e.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"EC":switch(e.alg){case"ES256":t={name:"ECDSA",namedCurve:"P-256"},r=e.d?["sign"]:["verify"];break;case"ES384":t={name:"ECDSA",namedCurve:"P-384"},r=e.d?["sign"]:["verify"];break;case"ES512":t={name:"ECDSA",namedCurve:"P-521"},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:"ECDH",namedCurve:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;case"OKP":switch(e.alg){case"Ed25519":case"EdDSA":t={name:"Ed25519"},r=e.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":t={name:e.crv},r=e.d?["deriveBits"]:[];break;default:throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break;default:throw new JOSENotSupported('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:t,keyUsages:r}}(e),a={...e};return"AKP"!==a.kty&&delete a.alg,delete a.use,crypto.subtle.importKey("jwk",a,t,e.ext??(!e.d&&!e.priv),e.key_ops??r)},handleJWK=async(e,t,r,i=!1)=>{let s=(a||=new WeakMap).get(e);if(s?.[r])return s[r];let o=await jwk_to_key({...t,alg:r});return i&&Object.freeze(e),s?s[r]=o:a.set(e,{[r]:o}),o},handleKeyObject=(e,t)=>{let r;let i=(a||=new WeakMap).get(e);if(i?.[t])return i[t];let s="public"===e.type,o=!!s;if("x25519"===e.asymmetricKeyType){switch(t){case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":break;default:throw TypeError("given KeyObject instance cannot be used for this algorithm")}r=e.toCryptoKey(e.asymmetricKeyType,o,s?[]:["deriveBits"])}if("ed25519"===e.asymmetricKeyType){if("EdDSA"!==t&&"Ed25519"!==t)throw TypeError("given KeyObject instance cannot be used for this algorithm");r=e.toCryptoKey(e.asymmetricKeyType,o,[s?"verify":"sign"])}switch(e.asymmetricKeyType){case"ml-dsa-44":case"ml-dsa-65":case"ml-dsa-87":if(t!==e.asymmetricKeyType.toUpperCase())throw TypeError("given KeyObject instance cannot be used for this algorithm");r=e.toCryptoKey(e.asymmetricKeyType,o,[s?"verify":"sign"])}if("rsa"===e.asymmetricKeyType){let a;switch(t){case"RSA-OAEP":a="SHA-1";break;case"RS256":case"PS256":case"RSA-OAEP-256":a="SHA-256";break;case"RS384":case"PS384":case"RSA-OAEP-384":a="SHA-384";break;case"RS512":case"PS512":case"RSA-OAEP-512":a="SHA-512";break;default:throw TypeError("given KeyObject instance cannot be used for this algorithm")}if(t.startsWith("RSA-OAEP"))return e.toCryptoKey({name:"RSA-OAEP",hash:a},o,s?["encrypt"]:["decrypt"]);r=e.toCryptoKey({name:t.startsWith("PS")?"RSA-PSS":"RSASSA-PKCS1-v1_5",hash:a},o,[s?"verify":"sign"])}if("ec"===e.asymmetricKeyType){let a=new Map([["prime256v1","P-256"],["secp384r1","P-384"],["secp521r1","P-521"]]),i=a.get(e.asymmetricKeyDetails?.namedCurve);if(!i)throw TypeError("given KeyObject instance cannot be used for this algorithm");"ES256"===t&&"P-256"===i&&(r=e.toCryptoKey({name:"ECDSA",namedCurve:i},o,[s?"verify":"sign"])),"ES384"===t&&"P-384"===i&&(r=e.toCryptoKey({name:"ECDSA",namedCurve:i},o,[s?"verify":"sign"])),"ES512"===t&&"P-521"===i&&(r=e.toCryptoKey({name:"ECDSA",namedCurve:i},o,[s?"verify":"sign"])),t.startsWith("ECDH-ES")&&(r=e.toCryptoKey({name:"ECDH",namedCurve:i},o,s?[]:["deriveBits"]))}if(!r)throw TypeError("given KeyObject instance cannot be used for this algorithm");return i?i[t]=r:a.set(e,{[t]:r}),r},normalize_key=async(e,t)=>{if(e instanceof Uint8Array||isCryptoKey(e))return e;if(isKeyObject(e)){if("secret"===e.type)return e.export();if("toCryptoKey"in e&&"function"==typeof e.toCryptoKey)try{return handleKeyObject(e,t)}catch(e){if(e instanceof TypeError)throw e}let r=e.export({format:"jwk"});return handleJWK(e,r,t)}if(isJWK(e))return e.k?decode(e.k):handleJWK(e,e,t,!0);throw Error("unreachable")};async function flattenedVerify(e,t,r){let a,o;if(!is_object(e))throw new JWSInvalid("Flattened JWS must be an object");if(void 0===e.protected&&void 0===e.header)throw new JWSInvalid('Flattened JWS must have either of the "protected" or "header" members');if(void 0!==e.protected&&"string"!=typeof e.protected)throw new JWSInvalid("JWS Protected Header incorrect type");if(void 0===e.payload)throw new JWSInvalid("JWS Payload missing");if("string"!=typeof e.signature)throw new JWSInvalid("JWS Signature missing or incorrect type");if(void 0!==e.header&&!is_object(e.header))throw new JWSInvalid("JWS Unprotected Header incorrect type");let n={};if(e.protected)try{let t=decode(e.protected);n=JSON.parse(s.decode(t))}catch{throw new JWSInvalid("JWS Protected Header is invalid")}if(!is_disjoint(n,e.header))throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");let c={...n,...e.header},l=validate_crit(JWSInvalid,new Map([["b64",!0]]),r?.crit,n,c),d=!0;if(l.has("b64")&&"boolean"!=typeof(d=n.b64))throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');let{alg:y}=c;if("string"!=typeof y||!y)throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');let p=r&&validate_algorithms("algorithms",r.algorithms);if(p&&!p.has(y))throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter value not allowed');if(d){if("string"!=typeof e.payload)throw new JWSInvalid("JWS Payload must be a string")}else if("string"!=typeof e.payload&&!(e.payload instanceof Uint8Array))throw new JWSInvalid("JWS Payload must be a string or an Uint8Array instance");let h=!1;"function"==typeof t&&(t=await t(n,e),h=!0),check_key_type(y,t,"verify");let u=function(...e){let t=e.reduce((e,{length:t})=>e+t,0),r=new Uint8Array(t),a=0;for(let t of e)r.set(t,a),a+=t.length;return r}(i.encode(e.protected??""),i.encode("."),"string"==typeof e.payload?i.encode(e.payload):e.payload);try{a=decode(e.signature)}catch{throw new JWSInvalid("Failed to base64url decode the signature")}let f=await normalize_key(t,y),S=await verify(y,f,a,u);if(!S)throw new JWSSignatureVerificationFailed;if(d)try{o=decode(e.payload)}catch{throw new JWSInvalid("Failed to base64url decode the payload")}else o="string"==typeof e.payload?i.encode(e.payload):e.payload;let m={payload:o};return(void 0!==e.protected&&(m.protectedHeader=n),void 0!==e.header&&(m.unprotectedHeader=e.header),h)?{...m,key:f}:m}async function compactVerify(e,t,r){if(e instanceof Uint8Array&&(e=s.decode(e)),"string"!=typeof e)throw new JWSInvalid("Compact JWS must be a string or Uint8Array");let{0:a,1:i,2:o,length:n}=e.split(".");if(3!==n)throw new JWSInvalid("Invalid Compact JWS");let c=await flattenedVerify({payload:i,protected:a,signature:o},t,r),l={payload:c.payload,protectedHeader:c.protectedHeader};return"function"==typeof t?{...l,key:c.key}:l}let lib_epoch=e=>Math.floor(e.getTime()/1e3),o=604800,n=31557600,c=/^(\+|\-)? ?(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i,lib_secs=e=>{let t;let r=c.exec(e);if(!r||r[4]&&r[1])throw TypeError("Invalid time period format");let a=parseFloat(r[2]),i=r[3].toLowerCase();switch(i){case"sec":case"secs":case"second":case"seconds":case"s":t=Math.round(a);break;case"minute":case"minutes":case"min":case"mins":case"m":t=Math.round(60*a);break;case"hour":case"hours":case"hr":case"hrs":case"h":t=Math.round(3600*a);break;case"day":case"days":case"d":t=Math.round(86400*a);break;case"week":case"weeks":case"w":t=Math.round(a*o);break;default:t=Math.round(a*n)}return"-"===r[1]||"ago"===r[4]?-t:t},normalizeTyp=e=>e.includes("/")?e.toLowerCase():`application/${e.toLowerCase()}`,checkAudiencePresence=(e,t)=>"string"==typeof e?t.includes(e):!!Array.isArray(e)&&t.some(Set.prototype.has.bind(new Set(e)));async function jwtVerify(e,t,r){let a=await compactVerify(e,t,r);if(a.protectedHeader.crit?.includes("b64")&&!1===a.protectedHeader.b64)throw new JWTInvalid("JWTs MUST NOT use unencoded payload");let i=function(e,t,r={}){let a,i;try{a=JSON.parse(s.decode(t))}catch{}if(!is_object(a))throw new JWTInvalid("JWT Claims Set must be a top-level JSON object");let{typ:o}=r;if(o&&("string"!=typeof e.typ||normalizeTyp(e.typ)!==normalizeTyp(o)))throw new JWTClaimValidationFailed('unexpected "typ" JWT header value',a,"typ","check_failed");let{requiredClaims:n=[],issuer:c,subject:l,audience:d,maxTokenAge:y}=r,p=[...n];for(let e of(void 0!==y&&p.push("iat"),void 0!==d&&p.push("aud"),void 0!==l&&p.push("sub"),void 0!==c&&p.push("iss"),new Set(p.reverse())))if(!(e in a))throw new JWTClaimValidationFailed(`missing required "${e}" claim`,a,e,"missing");if(c&&!(Array.isArray(c)?c:[c]).includes(a.iss))throw new JWTClaimValidationFailed('unexpected "iss" claim value',a,"iss","check_failed");if(l&&a.sub!==l)throw new JWTClaimValidationFailed('unexpected "sub" claim value',a,"sub","check_failed");if(d&&!checkAudiencePresence(a.aud,"string"==typeof d?[d]:d))throw new JWTClaimValidationFailed('unexpected "aud" claim value',a,"aud","check_failed");switch(typeof r.clockTolerance){case"string":i=lib_secs(r.clockTolerance);break;case"number":i=r.clockTolerance;break;case"undefined":i=0;break;default:throw TypeError("Invalid clockTolerance option type")}let{currentDate:h}=r,u=lib_epoch(h||new Date);if((void 0!==a.iat||y)&&"number"!=typeof a.iat)throw new JWTClaimValidationFailed('"iat" claim must be a number',a,"iat","invalid");if(void 0!==a.nbf){if("number"!=typeof a.nbf)throw new JWTClaimValidationFailed('"nbf" claim must be a number',a,"nbf","invalid");if(a.nbf>u+i)throw new JWTClaimValidationFailed('"nbf" claim timestamp check failed',a,"nbf","check_failed")}if(void 0!==a.exp){if("number"!=typeof a.exp)throw new JWTClaimValidationFailed('"exp" claim must be a number',a,"exp","invalid");if(a.exp<=u-i)throw new JWTExpired('"exp" claim timestamp check failed',a,"exp","check_failed")}if(y){let e=u-a.iat,t="number"==typeof y?y:lib_secs(y);if(e-i>t)throw new JWTExpired('"iat" claim timestamp check failed (too far in the past)',a,"iat","check_failed");if(e<0-i)throw new JWTClaimValidationFailed('"iat" claim timestamp check failed (it should be in the past)',a,"iat","check_failed")}return a}(a.protectedHeader,a.payload,r),o={payload:i,protectedHeader:a.protectedHeader};return"function"==typeof t?{...o,key:a.key}:o}}};